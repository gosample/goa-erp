// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "goa-erp": Application Contexts
//
// Command:
// $ goagen
// --design=goa-erp/design
// --out=$(GOPATH)\src\goa-erp
// --version=v1.3.0

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// ListAccountContext provides the account list action context.
type ListAccountContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewListAccountContext parses the incoming request URL and body, performs validations and creates the
// context used by the account controller list action.
func NewListAccountContext(ctx context.Context, r *http.Request, service *goa.Service) (*ListAccountContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ListAccountContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ListAccountContext) OK(r AccountCollection) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.account+json; type=collection")
	}
	if r == nil {
		r = AccountCollection{}
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}

// ListCompanyContext provides the company list action context.
type ListCompanyContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
}

// NewListCompanyContext parses the incoming request URL and body, performs validations and creates the
// context used by the company controller list action.
func NewListCompanyContext(ctx context.Context, r *http.Request, service *goa.Service) (*ListCompanyContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ListCompanyContext{Context: ctx, ResponseData: resp, RequestData: req}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ListCompanyContext) OK(r CompanyCollection) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "application/vnd.company+json; type=collection")
	}
	if r == nil {
		r = CompanyCollection{}
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}
