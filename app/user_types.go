// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "goa-erp": Application User Types
//
// Command:
// $ goagen
// --design=goa-erp/design
// --out=$(GOPATH)\src\goa-erp
// --version=v1.3.0

package app

import (
	"github.com/goadesign/goa"
	"unicode/utf8"
)

// accountPayload user type.
type accountPayload struct {
	Username *string `form:"username,omitempty" json:"username,omitempty" xml:"username,omitempty"`
}

// Validate validates the accountPayload type instance.
func (ut *accountPayload) Validate() (err error) {
	if ut.Username != nil {
		if utf8.RuneCountInString(*ut.Username) < 6 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`request.username`, *ut.Username, utf8.RuneCountInString(*ut.Username), 6, true))
		}
	}
	return
}

// Publicize creates AccountPayload from accountPayload
func (ut *accountPayload) Publicize() *AccountPayload {
	var pub AccountPayload
	if ut.Username != nil {
		pub.Username = ut.Username
	}
	return &pub
}

// AccountPayload user type.
type AccountPayload struct {
	Username *string `form:"username,omitempty" json:"username,omitempty" xml:"username,omitempty"`
}

// Validate validates the AccountPayload type instance.
func (ut *AccountPayload) Validate() (err error) {
	if ut.Username != nil {
		if utf8.RuneCountInString(*ut.Username) < 6 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`type.username`, *ut.Username, utf8.RuneCountInString(*ut.Username), 6, true))
		}
	}
	return
}

// companyPayload user type.
type companyPayload struct {
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}

// Publicize creates CompanyPayload from companyPayload
func (ut *companyPayload) Publicize() *CompanyPayload {
	var pub CompanyPayload
	if ut.Name != nil {
		pub.Name = ut.Name
	}
	return &pub
}

// CompanyPayload user type.
type CompanyPayload struct {
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
}
